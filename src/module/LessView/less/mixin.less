// // Mixin 的定义分两种，有无参数
// .color {
//   color: #fff;
//   background-color: green;
// }

// .color(@color, @bgColor) {
//   color: @color;
//   background-color: @bgColor;
// }

// .mixin-wrap {
//   width: 100px;
//   height: 100px;
//   .color;
// }

// .mixin-box {
//   width: 100px;
//   height: 100px;
//   .color(#fff, red);
// }

// // Mixin中返回变量
// .variableMixin {
//   @width: 100px;
//   @height: 100px;
// }

// .mixin-wrap {
//   .variableMixin();
//   width: @width;
//   height: @height;
//   .color(#fff, blue);
// }

// // Mixin中返回Mixin
// .variableMixin(@bgColor) {
//   .mixinChild {
//     width: 100px;
//     height: 100px;
//     background-color: @bgColor;
//   }
// }

// .mixin-wrap {
//   .variableMixin(orange);
//   .mixinChild();
// }

// // Mixin中返回选择器
// .hoverMixin(@width, @height, @second) {
//   &:hover {
//     width: @width;
//     height: @height;
//     transition: @second;
//   }
// }

// .mixin-wrap {
//   width: 100px;
//   height: 100px;
//   .hoverMixin(200px, 200px, .5s);
// }


// // 默认参数
// .hoverMixin(@width: 150px, @height: 150px, @second: .5s) {
//   &:hover {
//     width: @width;
//     height: @height;
//     transition: @second;
//   }
// }

// .mixin-wrap {
//   width: 100px;
//   height: 100px;
//   .hoverMixin();
// }

// // @arguments
// .paddingMixin(...) {
//   width: 100px;
//   height: 100px;
//   padding: @arguments;
//   background-color: orange;
// }

// .paddingMixin(@top, @right, @bottom, @left) {
//   width: 100px;
//   height: 100px;
//   padding: @top @right @bottom @left;
//   background-color: orange;
// }

// .mixin-wrap {
//   .paddingMixin(10px, 20px, 30px, 40px);
// }

// // @rest
// .paddingMixin(@width, @height, @rest...) {
//   width: @width;
//   height: @height;
//   padding: @rest;
//   background-color: orange;
// }

// .mixin-wrap {
//   .paddingMixin(100px, 200px, 20px, 20px, 20px, 20px);
// }

// // 样式兼容
// .flex(@flex) {
//   -webkit-box-flex: @flex;
//   -moz-box-flex: @flex;
//   -o-box-flex: @flex;
//   box-flex: @flex;
//   -webkit-flex: @flex;
//   -moz-flex: @flex;
//   -ms-flex: @flex;
//   -o-flex: @flex;
//   flex: @flex;
// }

// // when
// .box(@width, @height, @color) when (@width > 200px) {
//   width: @width;
//   height: @height;
//   background-color: @color;
// }

// .mixin-wrap {
//   .box(100px, 200px, orange);
// }

// // when ... and ...
// .box(@width, @height, @color) when (@width > 200px) and (@height > 200px) and (@color = pink) {
//   width: @width;
//   height: @height;
//   background-color: @color;
// }

// .mixin-wrap {
//   .box(300px, 300px, orange);
// }

// // when ... , ...
// .box(@width, @height, @color) when (@width > 200px) , (@height > 200px) and (@color = pink) {
//   width: @width;
//   height: @height;
//   background-color: @color;
// }

// .mixin-wrap {
//   .box(100px, 300px, orange);
// }

// // 公共代码匹配
// .sizeMixin(...) {
//   height: 100px;
//   background-color: orange;
// }

// .sizeMixin(@width) {
//   width: 100px;
// }

// .mixin-wrap {
//   .sizeMixin(200px);
// }

// 匹配
.borderMixin(@_, @size, @color) {
  width: 100px;
  height: 100px;
  border: @size solid transparent;
}

.borderMixin(top, @size, @color) {
  border-top-color: @color;
}
.borderMixin(right, @size, @color) {
  border-right-color: @color;
}
.borderMixin(bottom, @size, @color) {
  border-bottom-color: @color;
}
.borderMixin(left, @size, @color) {
  border-left-color: @color;
}
// 为啥这里只生效了一条？
.mixin-wrap {
  .borderMixin(top, 20px, orange);
  .borderMixin(right, 20px, blue);
  .borderMixin(bottom, 20px, green);
  .borderMixin(left, 20px, red);
}


